name: Deploy Docker Container

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create .env file
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
        echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "AUTH_USERNAME=${{ secrets.AUTH_USERNAME }}" >> .env
        echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> .env
        echo "LOGGING_LEVEL=WARN" >> .env
        echo "DO_SHOW_SQL=false" >> .env
    - name: Build Docker Image
      run: |
        docker build -t portfolio-back-image .
        docker tag portfolio-back-image garwalle/portfolio-back-image:latest
    - name: Push Docker Image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin 
        docker push garwalle/portfolio-back-image:latest
    - name: Deploy to Production
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker stop portfolio-back
          docker rm portfolio-back
          docker image rm garwalle/portfolio-back-image
          docker pull garwalle/portfolio-back-image
          docker run -d --name portfolio-back -p 8080:8080 --net="linkstart" garwalle/portfolio-back-image
